{:min-bb-version "0.8.156"
 :deps {}
 :paths ["resources" "scripts"]
 :tasks {:requires ([babashka.fs :as fs]
                    [clojure.string :as str]
                    [babashka.tasks :refer [shell]])
         test      (apply clojure "-M:kaocha" *command-line-args*)
         test.jvm (clojure "-M:kaocha" "--focus" ":unit-jvm")
         deps-tree (clojure "-X:deps tree :aliases '[:dev]'")
         dev {:doc "Start a local development server" :task (apply clojure "-M:dev:repl/dev" *command-line-args*)}
         fmt (shell "cljfmt -v fix src test")
         fmt.check (shell "cljfmt -v check src test")
         lint.copy-configs (let [cp (-> (shell {:out :string} "clojure -Spath -M:test:dev") :out str/trim)]
                             (shell (str "clj-kondo --lint " cp " --dependencies --copy-configs --skip-lint")))
         lint (shell (str "clj-kondo" " --fail-level error"
                          (if (seq *command-line-args*)
                            (str " --lint " (first *command-line-args*))
                            " --lint src test")))
         jar {:override-builtin true
              :depends [clean]
              :doc "Build an jar"
              :task (shell "clojure -T:build jar")}
         clean {:override-builtin true
                :doc "Clean build artifacts"
                :task (shell "clojure -T:build clean")}
         publish {:doc "Publish the clojure sdk libs to clojars"
                  :depends [jar]
                  :task (clojure "-T:build deploy")}
         ci {:depends [test fmt.check lint]}}}
