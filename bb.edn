{:deps  {}
 :paths ["resources" "scripts"]
 :tasks {:requires         ([babashka.fs :as fs]
                            [clojure.string :as str]
                            [babashka.tasks :refer [shell]])
         test              (apply clojure "-M:kaocha" *command-line-args*)
         test.jvm          (clojure "-M:kaocha" "--focus" ":unit-jvm")
         deps-tree         (clojure "-X:deps tree :aliases '[:dev]'")
         dev               {:doc "Start a local development server" :task (apply clojure "-M:dev:repl/dev" *command-line-args*)}
         fmt               (shell "cljfmt -v fix src test")
         fmt.check         (shell "cljfmt -v check src test")
         lint.copy-configs (shell "clj-kondo" "--lint" (-> (shell {:out :string} "clojure -Spath -M:test:dev") :out str/trim) "--dependencies" "--copy-configs" "--skip-lint")
         lint              (if (seq *command-line-args*)
                             (apply shell "clj-kondo" "--lint" *command-line-args*)
                             (shell "clj-kondo" "--lint" "src" "test"))

         jar     {:override-builtin true
                  :depends          [clean]
                  :doc              "Build an jar"
                  :task             (shell "clojure -T:build jar")}
         clean   {:override-builtin true
                  :doc              "Clean build artifacts"
                  :task             (shell "clojure -T:build clean")}
         publish {:doc     "Publish the clojure sdk libs to clojars"
                  :depends [jar]
                  :task    (clojure "-T:build deploy")}
         ci      {:depends [test fmt.check lint]}}}
